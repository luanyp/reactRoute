{"ast":null,"code":"/*网路请求配置*/\nimport axios from 'axios';\nimport { requestHeader } from './configRelease';\naxios.defaults.timeout = 100000;\naxios.defaults.baseURL = ''; //http request 拦截器\n\naxios.interceptors.request.use(function (config) {\n  config.data = JSON.stringify(config.data);\n  config.headers = requestHeader;\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n}); //http response 拦截器\n\naxios.interceptors.response.use(function (response) {\n  if (response.data.errCode === 2) {\n    console.log(\"过期\"); // router.push({\n    // \tpath: \"/login\",\n    // \tquerry: {redirect: router.currentRoute.fullPath}//从哪个页面跳转\n    // })\n  }\n\n  return response;\n}, function (error) {\n  return Promise.reject(error);\n});\n/**\r\n * 封装get方法\r\n * @param url\r\n * @param params\r\n * @returns {Promise}\r\n */\n\nexport function get(url) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return new Promise(function (resolve, reject) {\n    axios.get(url, {\n      params: params\n    }).then(function (response) {\n      landing(url, params, response.data);\n      resolve(response.data);\n    }).catch(function (err) {\n      reject(err);\n    });\n  });\n}\n/**\r\n * 封装post请求\r\n * @param url\r\n * @param data\r\n * @returns {Promise}\r\n */\n\nexport function post(url, data) {\n  return new Promise(function (resolve, reject) {\n    axios.post(url, data).then(function (response) {\n      //关闭进度条\n      resolve(response.data);\n    }, function (err) {\n      reject(err);\n    });\n  });\n}\n/**\r\n * 封装patch请求\r\n * @param url\r\n * @param data\r\n * @returns {Promise}\r\n */\n\nexport function patch(url) {\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return new Promise(function (resolve, reject) {\n    axios.patch(url, data).then(function (response) {\n      resolve(response.data);\n    }, function (err) {\n      msag(err);\n      reject(err);\n    });\n  });\n}\n/**\r\n * 封装put请求\r\n * @param url\r\n * @param data\r\n * @returns {Promise}\r\n */\n\nexport function put(url) {\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return new Promise(function (resolve, reject) {\n    axios.put(url, data).then(function (response) {\n      resolve(response.data);\n    }, function (err) {\n      msag(err);\n      reject(err);\n    });\n  });\n} //统一接口处理，返回数据\n\nexport function HttpData(fecth, url, parm) {\n  var _data = \"\";\n  var promise = new Promise(function (resolve, reject) {\n    switch (fecth) {\n      case \"get\":\n        get(url, parm).then(function (response) {\n          _data = Object.assign({}, JSON.parse(JSON.stringify(response.result)));\n          resolve(_data);\n        }).catch(function (error) {});\n        break;\n\n      case \"post\":\n        post(url, parm).then(function (response) {\n          _data = Object.assign({}, JSON.parse(JSON.stringify(response.result)));\n          resolve(_data);\n        }).catch(function (error) {});\n        break;\n\n      default:\n        break;\n    }\n  });\n  return promise;\n}\n; //失败提示\n\nfunction msag(err) {\n  if (err && err.response) {\n    switch (err.response.status) {\n      case 400:\n        alert(err.response.data.error.details);\n        break;\n\n      case 401:\n        alert(\"未授权，请登录\");\n        break;\n\n      case 403:\n        alert(\"拒绝访问\");\n        break;\n\n      case 404:\n        alert(\"请求地址出错\");\n        break;\n\n      case 408:\n        alert(\"请求超时\");\n        break;\n\n      case 500:\n        alert(\"服务器内部错误\");\n        break;\n\n      case 501:\n        alert(\"服务未实现\");\n        break;\n\n      case 502:\n        alert(\"网关错误\");\n        break;\n\n      case 503:\n        alert(\"服务不可用\");\n        break;\n\n      case 504:\n        alert(\"网关超时\");\n        break;\n\n      case 505:\n        alert(\"HTTP版本不受支持\");\n        break;\n\n      default:\n    }\n  }\n}\n/**\r\n * 查看返回的数据\r\n * @param url\r\n * @param params\r\n * @param data\r\n */\n\n\nfunction landing(url, params, data) {\n  if (data.code === -1) {}\n}","map":{"version":3,"sources":["h:\\my-VSCode\\react\\reactRouterDemo\\src\\utils\\http.js"],"names":["axios","requestHeader","defaults","timeout","baseURL","interceptors","request","use","config","data","JSON","stringify","headers","error","Promise","reject","response","errCode","console","log","get","url","params","resolve","then","landing","catch","err","post","patch","msag","put","HttpData","fecth","parm","_data","promise","Object","assign","parse","result","status","alert","details","code"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAR,QAA4B,iBAA5B;AACAD,KAAK,CAACE,QAAN,CAAeC,OAAf,GAAyB,MAAzB;AACAH,KAAK,CAACE,QAAN,CAAeE,OAAf,GAAyB,EAAzB,C,CACA;;AACAJ,KAAK,CAACK,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACC,UAAAC,MAAM,EAAI;AACTA,EAAAA,MAAM,CAACC,IAAP,GAAcC,IAAI,CAACC,SAAL,CAAeH,MAAM,CAACC,IAAtB,CAAd;AACAD,EAAAA,MAAM,CAACI,OAAP,GAAiBX,aAAjB;AACA,SAAOO,MAAP;AACA,CALF,EAMC,UAAAK,KAAK,EAAI;AACR,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACA,CARF,E,CAYA;;AACAb,KAAK,CAACK,YAAN,CAAmBW,QAAnB,CAA4BT,GAA5B,CACC,UAAAS,QAAQ,EAAI;AACX,MAAIA,QAAQ,CAACP,IAAT,CAAcQ,OAAd,KAA0B,CAA9B,EAAiC;AAChCC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EADgC,CAEhC;AACA;AACA;AACA;AACA;;AACD,SAAOH,QAAP;AACA,CAVF,EAWC,UAAAH,KAAK,EAAI;AACR,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACA,CAbF;AAgBA;;;;;;;AAOA,OAAO,SAASO,GAAT,CAAaC,GAAb,EAA+B;AAAA,MAAbC,MAAa,uEAAJ,EAAI;AACrC,SAAO,IAAIR,OAAJ,CAAY,UAACS,OAAD,EAAUR,MAAV,EAAqB;AAEvCf,IAAAA,KAAK,CAACoB,GAAN,CAAUC,GAAV,EAAe;AACdC,MAAAA,MAAM,EAAEA;AADM,KAAf,EAGEE,IAHF,CAGO,UAAAR,QAAQ,EAAI;AAEjBS,MAAAA,OAAO,CAACJ,GAAD,EAAMC,MAAN,EAAcN,QAAQ,CAACP,IAAvB,CAAP;AACAc,MAAAA,OAAO,CAACP,QAAQ,CAACP,IAAV,CAAP;AACA,KAPF,EAQEiB,KARF,CAQQ,UAAAC,GAAG,EAAI;AACbZ,MAAAA,MAAM,CAACY,GAAD,CAAN;AACA,KAVF;AAWA,GAbM,CAAP;AAcA;AAGD;;;;;;;AAOA,OAAO,SAASC,IAAT,CAAcP,GAAd,EAAmBZ,IAAnB,EAAyB;AAC/B,SAAO,IAAIK,OAAJ,CAAY,UAACS,OAAD,EAAUR,MAAV,EAAqB;AACvCf,IAAAA,KAAK,CAAC4B,IAAN,CAAWP,GAAX,EAAgBZ,IAAhB,EAAsBe,IAAtB,CAA2B,UAAAR,QAAQ,EAAI;AAEtC;AACAO,MAAAA,OAAO,CAACP,QAAQ,CAACP,IAAV,CAAP;AACA,KAJD,EAIG,UAAAkB,GAAG,EAAI;AACTZ,MAAAA,MAAM,CAACY,GAAD,CAAN;AACA,KAND;AAOA,GARM,CAAP;AASA;AAED;;;;;;;AAOA,OAAO,SAASE,KAAT,CAAeR,GAAf,EAA+B;AAAA,MAAXZ,IAAW,uEAAJ,EAAI;AACrC,SAAO,IAAIK,OAAJ,CAAY,UAACS,OAAD,EAAUR,MAAV,EAAqB;AACvCf,IAAAA,KAAK,CAAC6B,KAAN,CAAYR,GAAZ,EAAiBZ,IAAjB,EACEe,IADF,CACO,UAAAR,QAAQ,EAAI;AACjBO,MAAAA,OAAO,CAACP,QAAQ,CAACP,IAAV,CAAP;AACA,KAHF,EAGI,UAAAkB,GAAG,EAAI;AACTG,MAAAA,IAAI,CAACH,GAAD,CAAJ;AACAZ,MAAAA,MAAM,CAACY,GAAD,CAAN;AACA,KANF;AAOA,GARM,CAAP;AASA;AAED;;;;;;;AAOA,OAAO,SAASI,GAAT,CAAaV,GAAb,EAA6B;AAAA,MAAXZ,IAAW,uEAAJ,EAAI;AACnC,SAAO,IAAIK,OAAJ,CAAY,UAACS,OAAD,EAAUR,MAAV,EAAqB;AACvCf,IAAAA,KAAK,CAAC+B,GAAN,CAAUV,GAAV,EAAeZ,IAAf,EACEe,IADF,CACO,UAAAR,QAAQ,EAAI;AACjBO,MAAAA,OAAO,CAACP,QAAQ,CAACP,IAAV,CAAP;AACA,KAHF,EAGI,UAAAkB,GAAG,EAAI;AACTG,MAAAA,IAAI,CAACH,GAAD,CAAJ;AACAZ,MAAAA,MAAM,CAACY,GAAD,CAAN;AACA,KANF;AAOA,GARM,CAAP;AASA,C,CACD;;AACA,OAAO,SAASK,QAAT,CAAmBC,KAAnB,EAAyBZ,GAAzB,EAA8Ba,IAA9B,EAAoC;AAC1C,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAIC,OAAO,GAAG,IAAItB,OAAJ,CAAY,UAACS,OAAD,EAAUR,MAAV,EAAqB;AAC9C,YAAQkB,KAAR;AACC,WAAK,KAAL;AACCb,QAAAA,GAAG,CAACC,GAAD,EAAMa,IAAN,CAAH,CAAeV,IAAf,CAAoB,UAAUR,QAAV,EAAoB;AACvCmB,UAAAA,KAAK,GAAGE,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB5B,IAAI,CAAC6B,KAAL,CAAW7B,IAAI,CAACC,SAAL,CAAeK,QAAQ,CAACwB,MAAxB,CAAX,CAAlB,CAAR;AACAjB,UAAAA,OAAO,CAAEY,KAAF,CAAP;AACA,SAHD,EAGGT,KAHH,CAGS,UAAUb,KAAV,EAAiB,CAAE,CAH5B;AAIA;;AACD,WAAK,MAAL;AACCe,QAAAA,IAAI,CAACP,GAAD,EAAMa,IAAN,CAAJ,CAAgBV,IAAhB,CAAqB,UAAUR,QAAV,EAAoB;AACxCmB,UAAAA,KAAK,GAAGE,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB5B,IAAI,CAAC6B,KAAL,CAAW7B,IAAI,CAACC,SAAL,CAAeK,QAAQ,CAACwB,MAAxB,CAAX,CAAlB,CAAR;AACAjB,UAAAA,OAAO,CAAEY,KAAF,CAAP;AACA,SAHD,EAGGT,KAHH,CAGS,UAAUb,KAAV,EAAiB,CAAE,CAH5B;AAIA;;AACD;AACC;AAdF;AAiBA,GAlBa,CAAd;AAmBA,SAAOuB,OAAP;AACA;AAAA,C,CACD;;AACA,SAASN,IAAT,CAAcH,GAAd,EAAmB;AAClB,MAAIA,GAAG,IAAIA,GAAG,CAACX,QAAf,EAAyB;AACxB,YAAQW,GAAG,CAACX,QAAJ,CAAayB,MAArB;AACC,WAAK,GAAL;AACCC,QAAAA,KAAK,CAACf,GAAG,CAACX,QAAJ,CAAaP,IAAb,CAAkBI,KAAlB,CAAwB8B,OAAzB,CAAL;AACA;;AACD,WAAK,GAAL;AACCD,QAAAA,KAAK,CAAC,SAAD,CAAL;AACA;;AAED,WAAK,GAAL;AACCA,QAAAA,KAAK,CAAC,MAAD,CAAL;AACA;;AAED,WAAK,GAAL;AACCA,QAAAA,KAAK,CAAC,QAAD,CAAL;AACA;;AAED,WAAK,GAAL;AACCA,QAAAA,KAAK,CAAC,MAAD,CAAL;AACA;;AAED,WAAK,GAAL;AACCA,QAAAA,KAAK,CAAC,SAAD,CAAL;AACA;;AAED,WAAK,GAAL;AACCA,QAAAA,KAAK,CAAC,OAAD,CAAL;AACA;;AAED,WAAK,GAAL;AACCA,QAAAA,KAAK,CAAC,MAAD,CAAL;AACA;;AAED,WAAK,GAAL;AACCA,QAAAA,KAAK,CAAC,OAAD,CAAL;AACA;;AAED,WAAK,GAAL;AACCA,QAAAA,KAAK,CAAC,MAAD,CAAL;AACA;;AAED,WAAK,GAAL;AACCA,QAAAA,KAAK,CAAC,YAAD,CAAL;AACA;;AACD;AA3CD;AA6CA;AACD;AACD;;;;;;;;AAMA,SAASjB,OAAT,CAAiBJ,GAAjB,EAAsBC,MAAtB,EAA8Bb,IAA9B,EAAoC;AACnC,MAAIA,IAAI,CAACmC,IAAL,KAAc,CAAC,CAAnB,EAAsB,CACrB;AACD","sourcesContent":["/*网路请求配置*/\r\nimport axios from 'axios';\r\nimport {requestHeader} from './configRelease'\r\naxios.defaults.timeout = 100000;\r\naxios.defaults.baseURL = '';\r\n//http request 拦截器\r\naxios.interceptors.request.use(\r\n\tconfig => {\r\n\t\tconfig.data = JSON.stringify(config.data);\r\n\t\tconfig.headers = requestHeader;\r\n\t\treturn config;\r\n\t},\r\n\terror => {\r\n\t\treturn Promise.reject(error);\r\n\t}\r\n);\r\n\r\n\r\n//http response 拦截器\r\naxios.interceptors.response.use(\r\n\tresponse => {\r\n\t\tif (response.data.errCode === 2) {\r\n\t\t\tconsole.log(\"过期\")\r\n\t\t\t// router.push({\r\n\t\t\t// \tpath: \"/login\",\r\n\t\t\t// \tquerry: {redirect: router.currentRoute.fullPath}//从哪个页面跳转\r\n\t\t\t// })\r\n\t\t}\r\n\t\treturn response;\r\n\t},\r\n\terror => {\r\n\t\treturn Promise.reject(error)\r\n\t}\r\n);\r\n\r\n/**\r\n * 封装get方法\r\n * @param url\r\n * @param params\r\n * @returns {Promise}\r\n */\r\n\r\nexport function get(url, params = {}) {\r\n\treturn new Promise((resolve, reject) => {\r\n\r\n\t\taxios.get(url, {\r\n\t\t\tparams: params\r\n\t\t})\r\n\t\t\t.then(response => {\r\n\r\n\t\t\t\tlanding(url, params, response.data);\r\n\t\t\t\tresolve(response.data);\r\n\t\t\t})\r\n\t\t\t.catch(err => {\r\n\t\t\t\treject(err);\r\n\t\t\t})\r\n\t})\r\n}\r\n\r\n\r\n/**\r\n * 封装post请求\r\n * @param url\r\n * @param data\r\n * @returns {Promise}\r\n */\r\n\r\nexport function post(url, data) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\taxios.post(url, data).then(response => {\r\n\r\n\t\t\t//关闭进度条\r\n\t\t\tresolve(response.data);\r\n\t\t}, err => {\r\n\t\t\treject(err)\r\n\t\t})\r\n\t})\r\n}\r\n\r\n/**\r\n * 封装patch请求\r\n * @param url\r\n * @param data\r\n * @returns {Promise}\r\n */\r\n\r\nexport function patch(url, data = {}) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\taxios.patch(url, data)\r\n\t\t\t.then(response => {\r\n\t\t\t\tresolve(response.data);\r\n\t\t\t}, err => {\r\n\t\t\t\tmsag(err)\r\n\t\t\t\treject(err)\r\n\t\t\t})\r\n\t})\r\n}\r\n\r\n/**\r\n * 封装put请求\r\n * @param url\r\n * @param data\r\n * @returns {Promise}\r\n */\r\n\r\nexport function put(url, data = {}) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\taxios.put(url, data)\r\n\t\t\t.then(response => {\r\n\t\t\t\tresolve(response.data);\r\n\t\t\t}, err => {\r\n\t\t\t\tmsag(err)\r\n\t\t\t\treject(err)\r\n\t\t\t})\r\n\t})\r\n}\r\n//统一接口处理，返回数据\r\nexport function HttpData (fecth,url, parm) {\r\n\tlet _data = \"\";\r\n\tlet promise = new Promise((resolve, reject) => {\r\n\t\tswitch (fecth){\r\n\t\t\tcase \"get\":\r\n\t\t\t\tget(url, parm).then(function (response) {\r\n\t\t\t\t\t_data = Object.assign({}, JSON.parse(JSON.stringify(response.result)));\r\n\t\t\t\t\tresolve (_data);\r\n\t\t\t\t}).catch(function (error) {})\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"post\":\r\n\t\t\t\tpost(url, parm).then(function (response) {\r\n\t\t\t\t\t_data = Object.assign({}, JSON.parse(JSON.stringify(response.result)));\r\n\t\t\t\t\tresolve (_data);\r\n\t\t\t\t}).catch(function (error) {})\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t});\r\n\treturn promise\r\n};\r\n//失败提示\r\nfunction msag(err) {\r\n\tif (err && err.response) {\r\n\t\tswitch (err.response.status) {\r\n\t\t\tcase 400:\r\n\t\t\t\talert(err.response.data.error.details);\r\n\t\t\t\tbreak\r\n\t\t\tcase 401:\r\n\t\t\t\talert(\"未授权，请登录\");\r\n\t\t\t\tbreak\r\n\r\n\t\t\tcase 403:\r\n\t\t\t\talert(\"拒绝访问\");\r\n\t\t\t\tbreak\r\n\r\n\t\t\tcase 404:\r\n\t\t\t\talert(\"请求地址出错\");\r\n\t\t\t\tbreak\r\n\r\n\t\t\tcase 408:\r\n\t\t\t\talert(\"请求超时\");\r\n\t\t\t\tbreak\r\n\r\n\t\t\tcase 500:\r\n\t\t\t\talert(\"服务器内部错误\");\r\n\t\t\t\tbreak\r\n\r\n\t\t\tcase 501:\r\n\t\t\t\talert(\"服务未实现\");\r\n\t\t\t\tbreak\r\n\r\n\t\t\tcase 502:\r\n\t\t\t\talert(\"网关错误\");\r\n\t\t\t\tbreak\r\n\r\n\t\t\tcase 503:\r\n\t\t\t\talert(\"服务不可用\");\r\n\t\t\t\tbreak\r\n\r\n\t\t\tcase 504:\r\n\t\t\t\talert(\"网关超时\");\r\n\t\t\t\tbreak\r\n\r\n\t\t\tcase 505:\r\n\t\t\t\talert(\"HTTP版本不受支持\");\r\n\t\t\t\tbreak\r\n\t\t\tdefault:\r\n\t\t}\r\n\t}\r\n}\r\n/**\r\n * 查看返回的数据\r\n * @param url\r\n * @param params\r\n * @param data\r\n */\r\nfunction landing(url, params, data) {\r\n\tif (data.code === -1) {\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}